/*!
 * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.
 */

import {SDK_EVENT} from '@webex/common';

/**
 * Creates a 'webhook' envelope to wrap Webex Teams events in
 * @param {object} webex - sdk object
 * @param {string} resource - resource to create an envelope for
 * @returns {object} - Returns a promise of an event envelope object
 */
export default function createEventEnvelope(webex, resource) {
  return new Promise((resolve, reject) => {
    webex.people.get('me')
      .then((person) => {
        resolve({
          createdBy: person.id,
          orgId: person.orgId,
          resource,
          // id -- webhook id concept does not correlate to SDK socket event
          // name -- webhook name concept does not correlate to SDK socket event
          // targetUrl -- targetUrl concept does not correlate to SDK socket event
          // secret -- secret concept does not correlate to SDK socket event
          ownedBy: SDK_EVENT.EXTERNAL.OWNER.CREATOR,
          status: SDK_EVENT.EXTERNAL.STATUS.ACTIVE,
          created: new Date().toISOString(),
          data: {}
        });
      }).catch((e) => {
        reject(new Error(`Unable to get person info for ${resource} \
event envelope: ${e.message}`));
      });
  });
}
